# This file contains all of the services for an edX installation. See https://docs.docker.com/compose/compose-file/
# for the appropriate syntax and definitions.
#
# Housekeeping Rules:
# - Group third-party and edX services separately
# - Alphabetize services in the groups
# - Alphabetize individual configuration options for each service
# - Every service's container name should be prefixed with "edx.devstack." to avoid conflicts with other containers
#   that might be running for the same service.

version: "2.1"

services:
  # Third-party services
#  chrome:  # Appsembler: Commented out to make a lighter devstack.
#    container_name: edx.devstack.chrome
#    image: edxops/chrome:hawthorn.master
#    shm_size: 2g
#    ports:
#      - "15900:5900"
#    volumes:  # for file uploads
#      - ../edx-e2e-tests/upload_files:/edx/app/e2e/edx-e2e-tests/upload_files
#      - ../edx-platform/common/test/data:/edx/app/edxapp/edx-platform/common/test/data

  elasticsearch:
    container_name: edx.devstack.elasticsearch
    image: edxops/elasticsearch:devstack
    # TODO: What to do about these forwarded ports? They'll conflict with ports forwarded by the Vagrant VM.
    # ports:
    #   - "9200:9200"
    #   - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - elasticsearch_data:/usr/share/elasticsearch/logs

#  firefox:  # Appsembler: Commented out to make a lighter devstack.
#    container_name: edx.devstack.firefox
#    image: edxops/firefox:hawthorn.master
#    shm_size: 2g
#    ports:
#      - "25900:5900"
#    volumes:  # for file uploads
#      - ../edx-e2e-tests/upload_files:/edx/app/e2e/edx-e2e-tests/upload_files
#      - ../edx-platform/common/test/data:/edx/app/edxapp/edx-platform/common/test/data

  memcached:
    container_name: edx.devstack.memcached
    image: memcached:1.4.24
    # ports:
    #   - "11211:11211"

  mongo:
    # We use WiredTiger in all environments. In development environments we use small files
    # to conserve disk space, and disable the journal for a minor performance gain.
    # See https://docs.mongodb.com/v3.0/reference/program/mongod/#options for complete details.
    command: mongod --smallfiles --nojournal --storageEngine wiredTiger
    container_name: edx.devstack.mongo
    image: mongo:3.6.17
    ports:
     - "27017:27017"
    volumes:
      - mongo_data:/data/db

  mysql:
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci
    container_name: edx.devstack.mysql
    environment:
      MYSQL_ROOT_PASSWORD: ""
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    image: mysql:5.6
    # ports:
    #   - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  # edX services
  credentials:
    command: bash -c 'source /edx/app/credentials/credentials_env && while true; do python /edx/app/credentials/credentials/manage.py runserver 0.0.0.0:18150; sleep 2; done'
    container_name: edx.devstack.credentials
    depends_on:
      - mysql
      - memcached
    # Allows attachment to the credentials service using 'docker attach <containerID>'.
    stdin_open: true
    tty: true
    environment:
      CACHE_LOCATION: edx.devstack.memcached:12211
      DB_HOST: edx.devstack.mysql
      SOCIAL_AUTH_EDX_OIDC_URL_ROOT: http://edx.devstack.lms:18000/oauth2
      ENABLE_DJANGO_TOOLBAR: 1
    image: edxops/credentials:hawthorn.master
    ports:
      - "18150:18150"

#  discovery:  # Appsembler: Commented out to make a lighter devstack.
#    command: bash -c 'source /edx/app/discovery/discovery_env && while true; do python /edx/app/discovery/discovery/manage.py runserver 0.0.0.0:18381; sleep 2; done'
#    container_name: edx.devstack.discovery
#    depends_on:
#      - mysql
#      - elasticsearch
#      - memcached
#    # Allows attachment to the discovery service using 'docker attach <containerID>'.
#    stdin_open: true
#    tty: true
#    environment:
#      TEST_ELASTICSEARCH_URL: "http://edx.devstack.elasticsearch:9200"
#      ENABLE_DJANGO_TOOLBAR: 1
#    image: edxops/discovery:hawthorn.master
#    ports:
#      - "18381:18381"
#    volumes:
#      - discovery_assets:/edx/var/discovery/

#  ecommerce:  # Appsembler: Commented out to make a lighter devstack.
#    command: bash -c 'source /edx/app/ecommerce/ecommerce_env && while true; do python /edx/app/ecommerce/ecommerce/manage.py runserver 0.0.0.0:18130; sleep 2; done'
#    container_name: edx.devstack.ecommerce
#    depends_on:
#      - mysql
#      - memcached
#    # Allows attachment to the ecommerce service using 'docker attach <containerID>'.
#    stdin_open: true
#    tty: true
#    environment:
#      ENABLE_DJANGO_TOOLBAR: 1
#    image: edxops/ecommerce:hawthorn.master
#    ports:
#      - "18130:18130"

  lms:
    command: bash -c 'source /edx/app/edxapp/edxapp_env && while true; do python /edx/app/edxapp/edx-platform/manage.py lms runserver 0.0.0.0:18000 --settings devstack_docker; sleep 2; done'
    container_name: edx.devstack.lms
    depends_on:
      - devpi
      - mysql
      - memcached
      - mongo
    # Allows attachment to the LMS service using 'docker attach <containerID>'.
    stdin_open: true
    tty: true
    environment:
      BOK_CHOY_HOSTNAME: edx.devstack.lms
      BOK_CHOY_LMS_PORT: 18003
      BOK_CHOY_CMS_PORT: 18031
      EDXAPP_TEST_MONGO_HOST: edx.devstack.mongo
      NO_PYTHON_UNINSTALL: 1
    image: appsembler/edxapp:hawthorn
    ports:
      - "18000:18000"
      - "19876:19876" # JS test debugging
      # - "18003:18003"
      # - "18031:18031"
    volumes:
      - edxapp_lms_assets:/edx/var/edxapp/staticfiles/

  edx_notes_api:
    command: bash -c 'source /edx/app/edx_notes_api/edx_notes_api_env && while true; do python /edx/app/edx_notes_api/edx_notes_api/manage.py runserver 0.0.0.0:18120 --settings notesserver.settings.devstack; sleep 2; done'
    container_name: edx.devstack.edx_notes_api
    depends_on:
      - devpi
      - elasticsearch
      - mysql
    image: edxops/notes:hawthorn.master  # Will work fine until we have Ironwood
    ports:
      - "18120:18120"
    environment:
      DB_ENGINE: "django.db.backends.mysql"
      DB_HOST: "edx.devstack.mysql"
      DB_NAME: "notes"
      DB_PASSWORD: "password"
      DB_PORT: "3306"
      DB_USER: "notes001"
      ENABLE_DJANGO_TOOLBAR: 1
      ELASTICSEARCH_URL: "http://edx.devstack.elasticsearch:9200"

  studio:
    command: bash -c 'source /edx/app/edxapp/edxapp_env && while true; do python /edx/app/edxapp/edx-platform/manage.py cms runserver 0.0.0.0:18010 --settings devstack_docker; sleep 2; done'
    container_name: edx.devstack.studio
    depends_on:
      - devpi
      - mysql
      - memcached
      - mongo
    # Allows attachment to the Studio service using 'docker attach <containerID>'.
    stdin_open: true
    tty: true
    environment:
      BOK_CHOY_HOSTNAME: edx.devstack.studio
      BOK_CHOY_LMS_PORT: 18103
      BOK_CHOY_CMS_PORT: 18131
      EDXAPP_TEST_MONGO_HOST: edx.devstack.mongo
      NO_PYTHON_UNINSTALL: 1
    image: appsembler/edxapp:hawthorn
    ports:
      - "18010:18010"
      - "19877:19877" # JS test debugging
      # - "18103:18103"
      # - "18131:18131"
    volumes:
      - edxapp_studio_assets:/edx/var/edxapp/staticfiles/

  forum:
    command: bash -c 'source /edx/app/forum/ruby_env && source /edx/app/forum/devstack_forum_env && cd /edx/app/forum/cs_comments_service && bundle install && while true; do ruby app.rb -o 0.0.0.0 ; sleep 2; done'
    container_name: edx.devstack.forum
    depends_on:
      - mongo
      - memcached
      - elasticsearch
    image: edxops/forum:hawthorn.master
    ports:
      - "44567:4567"

  postgres:
    image: postgres:9.4
    container_name: tahoe.devstack.postgres
    environment:
      POSTGRES_PASSWORD: 'postgres'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - ${TAHOE_POSTGRES_PORT-5432}:5432

  redis:
    image: redis:3.0
    container_name: tahoe.devstack.redis
    ports:
      - ${TAHOE_REDIS_PORT:-6379}:6379
    volumes:
      - redis_data:/data

  amc:
    command: bash -c 'while true; do python manage.py runserver 0.0.0.0:19000; sleep 2; done'
    container_name: tahoe.devstack.amc
    depends_on:
      - redis
      - lms
      - postgres
    # Allows attachment to the LMS service using 'docker attach <containerID>'.
    stdin_open: true
    tty: true
    environment:
      DJANGO_DEBUG: "true"
      DJANGO_CELERY_ALWAYS_EAGER: "true"
      AMC_SIGNUP_WIZARD_ENABLED: "true"
      SSL_ENABLED: "false"
      DATABASE_URL: "postgres://postgres:postgres@tahoe.devstack.postgres:5432/postgres"
      BROKER_URL: "redis://tahoe.devstack.redis:6379/1"
      LMS_BASE_URL: "http://edx.devstack.lms:18000"
      CMS_BASE_URL: "http://edx.devstack.studio:18010"
      APPSEMBLER_EDX_OAUTH_CLIENT_ID: 6f2b93d5c02560c3f93f
      APPSEMBLER_EDX_OAUTH_CLIENT_SECRET: 2c6c9ac52dd19d7255dd569fb7eedbe0ebdab2db
      DJANGO_SETTINGS_MODULE: config.settings
      DJANGO_SECRET_KEY: DUMMY KEY ONLY FOR TO DEVSTACK
      DJANGO_ALLOWED_HOSTS: '*'
      OAUTHLIB_INSECURE_TRANSPORT: "true"
      APPSEMBLER_EDX_API_KEY: test
      APPSEMBLER_SECRET_KEY: secret_key
    image: appsembler/amc-backend-base
    ports:
      - "29000:19000"  # Discourage the use of the Python backend, but make it available for debugging purposes

  amc-frontend:
    command: bash -c 'while true; do npm start; sleep 2; done'
    container_name: tahoe.devstack.amc-frontend
    # Allows attachment to the LMS service using 'docker attach <containerID>'.
    stdin_open: true
    tty: true
    environment:
      LMS_BASE: "localhost:18000"
      PORT: 13000
      HOST: ${HOST:-localhost}
      BACKEND_HOST: "http://tahoe.devstack.amc:19000"
    depends_on:
      - amc
    image: appsembler/amc-frontend-base
    ports:
      - "13000:13000"

  devpi:
    container_name: edx.devstack.devpi
    image: edxops/devpi:hawthorn.master
    ports:
      - "3141:3141"
    volumes:
      - devpi_data:/data

volumes:
#  discovery_assets:  # Appsembler: Commented out to make a lighter devstack.
  edxapp_lms_assets:
  edxapp_studio_assets:
  elasticsearch_data:
  postgres_data:
  redis_data:
  mongo_data:
  mysql_data:
  devpi_data:
